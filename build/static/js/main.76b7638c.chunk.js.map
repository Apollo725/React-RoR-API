{"version":3,"sources":["constants/index.js","reducers/initialState.js","reducers/index.js","reducers/contacts.js","sagas/index.js","store.js","utils/RouteUtil.js","containers/Home/index.js","containers/Home/Home.js","utils/UserUtil.js","containers/Login/Login.js","containers/Login/index.js","containers/Profile/index.js","containers/Profile/Profile.js","components/Contacts/ContactsTable/ContactsTable.js","components/Contacts/ContactsTable/index.js","components/Common/TagInput/TagInput.js","components/Common/TagInput/index.js","components/Common/Button/Button.js","components/Common/Button/index.js","components/Common/DrawerUserCard/index.js","components/Common/DrawerUserCard/DrawerUserCard.js","utils/utils.js","components/Common/CuustomTabPane/CustomTabPane.js","components/Common/CuustomTabPane/index.js","components/Common/Drawer/index.js","components/Common/Drawer/NavDrawer.js","actions/contacts.js","components/Common/LoadingSpinner/LoadingSpinner.js","containers/Contacts/Contacts.js","containers/Contacts/index.js","components/Navigation/index.js","components/Navigation/Navigation.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_CONTACTS","CONTACTS_RECEIVED","TOGGLE_DRAWER","contacts","openDrawer","appReducer","combineReducers","state","initialState","type","payload","activeContact","name","age","address","tags","loading_contacts","rootReducer","action","fetchContacts","actionWatcher","rootSaga","fetch","then","response","json","put","data","takeLatest","all","history","createBrowserHistory","sagaMiddleware","createSagaMiddleware","loggedIn","localStorage","getItem","AuthRoute","Component","component","path","exact","render","props","to","ProtectedRoute","Home","JSON","parse","username","Login","password","handleSubmit","bind","e","preventDefault","this","user","setItem","stringify","push","alert","field","setState","target","value","className","onSubmit","onChange","update","placeholder","withRouter","Profile","columns","title","dataIndex","key","text","map","tag","index","color","length","toUpperCase","record","ContactsTable","dataSource","onRow","rowIndex","onClick","event","toggleDrawer","Tag","id","highlighted","style","marginLeft","fontSize","TagInput","processTag","trim","replace","handleInputKeyDown","evt","currentTags","keyCode","deleteLatest","onTagInputChanged","slice","isValid","includes","concat","handleRemoveItem","selectedIndex","console","log","tagsLen","item","i","defaultProps","Button","size","disabled","href","textTransform","textAlign","display","rel","children","React","PureComponent","DrawerUserCard","matches","match","join","getShortenName","TabPane","Tabs","CustomTabPane","defaultActiveKey","tab","NavDrawer","visible","placement","closable","onClose","antIcon","spin","LoadingSpinner","indicator","Contacts","loadingContact","connect","dispatch","bindActionCreators","Navigation","mode","Item","Routes","store","createStore","connectRouter","composeWithDevTools","applyMiddleware","routerMiddleware","run","configureStore","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76b7638c.chunk.js","sourcesContent":["export const FETCH_CONTACTS = 'FETCH_CONTACTS'\nexport const CONTACTS_RECEIVED = 'CONTACTS_RECEIVED'\nexport const TOGGLE_DRAWER = 'TOGGLE_DRAWER'\n","export default {\n  contacts: {\n    openDrawer: false,\n  },\n}","import { combineReducers } from 'redux'\n\nimport contactsReducer from './contacts'\n\nconst appReducer = combineReducers({\n  contacts: contactsReducer,\n})\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action)\n}\n\nexport default rootReducer","/* eslint-disable default-case */\nimport {\n  TOGGLE_DRAWER,\n  FETCH_CONTACTS,\n  CONTACTS_RECEIVED\n} from '../constants'\n\nimport initialState from './initialState'\n\nexport default function toggleDrawer(state = initialState.contacts, { type, payload = {} }) {\n  switch (type) {\n    case TOGGLE_DRAWER: {\n      const drawerState = state.openDrawer;\n      const { name, age, address, tags } = payload;\n      const newState = {\n        ...state,\n        openDrawer: !drawerState,\n        activeContact: {\n          name,\n          age,\n          address,\n          tags,\n        }\n      };\n\n      return newState\n    }\n    case FETCH_CONTACTS: {\n      const newState = {\n        ...state,\n        loading_contacts: true,\n      }\n      return newState\n    }\n\n    case CONTACTS_RECEIVED: {\n      const newState = {\n        ...state,\n        loading_contacts: false,\n        contacts: payload,\n      }\n      return newState\n    }\n    default:\n      return state;\n  }\n}","import { put, takeLatest, all } from 'redux-saga/effects';\n\nfunction* fetchContacts() {\n  const json = yield fetch('https://cors-anywhere.herokuapp.com/https://ruby-test-11.herokuapp.com/api/v1/contacts')\n        .then(response => response.json(), );    \n  yield put({ type: \"CONTACTS_RECEIVED\", payload: json.data, });\n}\nfunction* actionWatcher() {\n     yield takeLatest('FETCH_CONTACTS', fetchContacts)\n}\nexport default function* rootSaga() {\n   yield all([\n   actionWatcher(),\n   ]);\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { createBrowserHistory } from 'history'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\n\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\n\nexport const history = createBrowserHistory()\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport default () => {\n  const store = createStore(\n    connectRouter(history)(rootReducer),\n    composeWithDevTools(applyMiddleware(routerMiddleware(history), sagaMiddleware)),\n  )\n  sagaMiddleware.run(rootSaga)\n  return store\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const loggedIn = () => (localStorage.getItem('user') !== null);\n\nexport const AuthRoute = ({ component: Component, path, exact }) => (\n\n  <Route path={path} exact={exact} render={(props) => (\n    (!loggedIn()) ?\n      (<Component {...props} />) :\n      (<Redirect to=\"/\" />)\n  )} />\n\n)\n\nexport const ProtectedRoute = ({ component: Component, path, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    (loggedIn()) ?\n      (<Component {...props} />) :\n      (<Redirect to=\"/login\" />)\n  )} />\n)\n","import Home from './Home';\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { getUserName } from '../../utils/UserUtil';\n\nexport default class Home extends Component {\n\n  render() {\n    return (\n      <div>\n        Hello, {getUserName()}\n      </div>\n    )\n  }\n}\n","export const getUserName = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  return user.username;\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {\n      username,\n      password,\n    } = this.state;\n    \n    if (username === 'Admin' && password === 'test1A') {\n      const user = {...this.state};\n      localStorage.setItem('user', JSON.stringify(user));\n      this.props.history.push('/');\n    } else {\n      alert('Invalid Crediential');\n    }\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"session-page\">\n        <span className=\"session-page-logo\">Welcome</span>\n        <div className=\"session-form-container\">\n        <div className=\"session-form-top-section\">\n          <h2 className=\"session-form-header\">Login</h2>\n        </div>\n          <form className=\"session-form\" onSubmit={this.handleSubmit}>\n            <input \n              className=\"session-form-input\" \n              type=\"text\" \n              onChange={this.update('username')} \n              value={this.state.username} \n              placeholder=\"username\">\n            </input>\n            <input \n              className=\"session-form-input\" \n              type=\"password\" \n              onChange={this.update('password')} \n              value={this.state.password} \n              placeholder=\"Password\">\n            </input>\n            <button \n              className=\"session-form-submit\" \n              type=\"submit\">\n              Log in\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import Login from './Login'\n\nexport default Login;\n","import Profile from './Profile'\n\nexport default Profile;\n","import React, { Component } from 'react'\n\nexport default class Profile extends Component {\n  render() {\n    return (\n      <div>\n        Profile Form\n      </div>\n    )\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Table, Divider, Tag } from 'antd';\n\nimport 'antd/dist/antd.css';\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => <a>{text}</a>,\n  },\n  {\n    title: 'Phone Number',\n    dataIndex: 'phone_num',\n    key: 'phone_num',\n  },\n  {\n    title: 'Country',\n    dataIndex: 'country',\n    key: 'country',\n  },\n  {\n    title: 'IP Address',\n    dataIndex: 'ip_address',\n    key: 'ip_address',\n  },\n  {\n    title: 'Time Ellapsed',\n    dataIndex: 'time_ellapsed',\n    key: 'time_ellapsed',\n  },\n  // {\n  //   title: 'History',\n  //   dataIndex: 'history',\n  //   key: 'hisory',\n  // },\n  // {\n  //   title: 'Message',\n  //   dataIndex: 'message',\n  //   key: 'message',\n  // },\n  {\n    title: 'LTV Price',\n    dataIndex: 'ltv_price',\n    key: 'ltv_price',\n  },\n  {\n    title: 'Tags',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: tags => (\n      <span>\n        {tags.map((tag, index) => {\n          let color = tag.length > 5 ? 'geekblue' : 'green';\n          if (tag === 'loser') {\n            color = 'volcano';\n          }\n          return (\n            <Tag color={color} key={`${tag}-${index}`}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </span>\n    ),\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => (\n      <span>\n        <a>Invite {record.name}</a>\n        <Divider type=\"vertical\" />\n        <a>Delete</a>\n      </span>\n    ),\n  },\n];\n\nconst ContactsTable = (props) => {\n  const { contacts } = props;\n  return (\n    <Table\n      columns={columns}\n      dataSource={contacts}\n      onRow={(record, rowIndex) => {\n        return {\n          onClick: event => {props.toggleDrawer(record)}, // click row\n        };\n      }}\n    />\n  )\n}\n\nexport default ContactsTable;\n","import ContactsTable from './ContactsTable';\n\nexport default ContactsTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport './TagInput.css';\n\nconst Tag = ({ id, tag, onClick, highlighted }) => {\n  const removeSelectedTag = () => {\n    if (id === 'plus-tag') return null;\n    onClick(id);\n  };\n\n  let className = 'tag-input-tag';\n\n  if (highlighted) {\n    className += ' tag-input-tag--highlighted';\n  }\n\n  const iconStyle = {\n    marginLeft: '4px',\n    fontSize: '8px',\n    color: '#FF4C43',\n  }\n\n  return (\n    <li className={className} onClick={removeSelectedTag}>\n      {tag}\n      <span>\n        {id !== 'plus-tag' ? <Icon style={iconStyle}  type=\"close\" /> : ''}\n      </span>\n    </li>\n  );\n};\n\nexport default class TagInput extends Component {\n  static propTypes = {\n    currentTags: PropTypes.array,\n    onTagInputChanged: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    currentTags: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      deleteLatest: false,\n    };\n  }\n\n  processTag = (value) => {\n    return value.trim().replace(/\\s{2,}/g, ' ');\n  }\n\n  handleInputKeyDown = (evt) => {\n    const { currentTags } = this.props;\n    let { keyCode, target: { value } } = evt;\n\n    if (currentTags.length && evt.keyCode === 8 && !value.length) {\n      if (!this.state.deleteLatest) {\n        this.setState({ deleteLatest: true });\n        return;\n      }\n\n      this.setState({ deleteLatest: false });\n      this.props.onTagInputChanged(\n        currentTags.slice(0, currentTags.length - 1)\n      );\n\n      return;\n    }\n\n    this.setState({ deleteLatest: false });\n    value = this.processTag(value);\n\n    if ((keyCode === 13 || keyCode === 188) &&\n        this.isValid(value) &&\n        !currentTags.includes(value)) {\n      evt.preventDefault();\n      this.props.onTagInputChanged(currentTags.concat(value));\n      evt.target.value = '';\n    }\n  };\n\n  handleRemoveItem = selectedIndex => {\n    // this.setState({ deleteLatest: false });\n\n    // this.props.onTagInputChanged(\n    //   this.props.currentTags.filter((value, index) => index !== selectedIndex)\n    // );\n    console.log('remove this tag')\n  };\n\n  render() {\n    const { currentTags } = this.props;\n    const { deleteLatest } = this.state;\n    const tagsLen = currentTags.length;\n\n    return (\n      <div className='tag-input-container'>\n        {/* <div className='tag-input__input-area'>\n          <input\n            className='standard-input tag-input-field'\n            placeholder='Add a tag...'\n            onChange={this.handleInputChange}\n            onKeyDown={this.handleInputKeyDown}\n          />\n        </div> */}\n        <ul className='tag-input-tag-container'>\n          {tagsLen > 0 &&\n            currentTags.map((item, i) => (\n              <Tag\n                key={i}\n                id={i}\n                tag={item}\n                highlighted={deleteLatest && (i === (tagsLen - 1))}\n                onClick={this.handleRemoveItem}\n              />\n            ))}\n          <Tag\n            tag=\"+\"\n            id=\"plus-tag\"\n          />\n        </ul>\n      </div>\n    );\n  }\n}\n","import TagInput from './TagInput';\n\nexport default TagInput;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nclass Button extends React.PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    value: PropTypes.node,\n    href: PropTypes.string,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool,\n    textAlign: PropTypes.oneOf(['left', 'right', 'center']),\n    size: PropTypes.oneOf(['small', 'medium', 'large', 'header', 'square']),\n    color: PropTypes.oneOf(['primary', 'danger', 'transparent', 'default']),\n    textTransform: PropTypes.oneOf(['uppercase', 'lowercase', 'capitalize']),\n    display: PropTypes.oneOf(['block', 'inline-block']),\n    data: PropTypes.object,\n  }\n\n  static defaultProps = {\n    className: '',\n    children: null,\n    value: null,\n    onClick: null,\n    href: null,\n    disabled: false,\n    size: 'medium',\n    color: 'primary',\n    data: {},\n    textAlign: 'center',\n    textTransform: null,\n    display: 'block',\n  }\n\n  render() {\n    const { size, color, disabled, href, textTransform, className } = this.props;\n    let Component = 'div';\n    const props = {\n      ...this.props.data,\n      className: `ui-button ui-button--size-${size} ui-button--color-${color} ${className}`,\n      onClick: this.props.onClick,\n      style: {\n        textAlign: this.props.textAlign,\n        display: this.props.display,\n      },\n    };\n\n    if (disabled) {\n      props.className += ' ui-button--disabled';\n    }\n\n    if (href) {\n      Component = 'a';\n      props.rel = 'noopener noreferrer';\n      props.href = href;\n    }\n\n    if (textTransform) {\n      props.style.textTransform = textTransform;\n    }\n\n    if (textTransform && textTransform === 'uppercase') {\n      props.className += ' ui-button--transform-uppercase';\n    }\n\n    return (\n      <Component {...props}>\n        <div className=\"ui-button__content\">\n          {this.props.value || this.props.children}\n        </div>\n      </Component>\n    );\n  }\n}\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;\n","import DrawerUserCard from './DrawerUserCard';\n\nexport default DrawerUserCard;\n","import React from 'react';\nimport { getShortenName } from '../../../utils/utils';\nimport './DrawerUserCard.css';\nimport TagInput from '../TagInput';\nimport Button from '../Button';\n// import { Button } from 'antd';\n\nconst DrawerUserCard = (props) => {\n  const { name, tags } = props;\n  return (\n    <div className=\"drawer-card\">\n      <div className=\"drawer-card__avatar mt-8\">\n        <span>{getShortenName(name)}</span>\n      </div>\n      <span className=\"drawer-card__name mt-8\">{name}</span>\n      <TagInput currentTags={tags} onTagInputChanged={() => {}} />\n      <div className=\"drawer-card__btns\">\n        <Button color=\"primary\">Invite</Button>\n        <Button color=\"default\">Cancel</Button>\n        <Button color=\"danger\">Delete</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default DrawerUserCard;\n","export const getShortenName = (name = '') => {\n  const matches = name.match(/\\b(\\w)/g);\n  if (matches) return matches.join('');\n\n  return name;\n}\n","import React, { Component } from 'react'\nimport { Tabs } from 'antd';\n\nconst { TabPane } = Tabs;\n\nexport default class CustomTabPane extends Component {\n  render() {\n    return (\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Main info\" key=\"1\">\n          <span>Main Info</span>\n        </TabPane>\n        <TabPane tab=\"History\" key=\"2\">\n          <span>History</span>\n        </TabPane>\n        <TabPane tab=\"Message 2\" key=\"3\">\n          <span>Message2</span>\n        </TabPane>\n      </Tabs>\n    )\n  }\n}\n","import CustomTabPane from './CustomTabPane';\n\nexport default CustomTabPane;\n","import NavDrawer from './NavDrawer';\n\nexport default NavDrawer;\n","import React, { Component } from 'react';\nimport { Drawer } from 'antd';\nimport './NavDrawer.css';\nimport DrawerUserCard from '../DrawerUserCard';\nimport CustomTabPane from '../CuustomTabPane';\n\nexport default class NavDrawer extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      visible: false,\n    }\n  }\n\n  render() {\n    const {\n      openDrawer,\n      toggleDrawer,\n      activeContact = {},\n    } = this.props;\n\n    const {\n      name,\n      tags,\n    } = activeContact;\n\n    return (\n      <div>\n        <Drawer\n          placement=\"right\"\n          closable={false}\n          onClose={toggleDrawer}\n          visible={openDrawer}\n        >\n          <div className=\"drawer-container\">\n            <DrawerUserCard\n              name={name}\n              tags={tags}\n            />\n            <CustomTabPane />\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n","import {\n  TOGGLE_DRAWER,\n  FETCH_CONTACTS,\n  CONTACTS_RECEIVED,\n} from '../constants'\n\nexport const toggleDrawer = payload => {\n  return {\n    type: TOGGLE_DRAWER,\n    payload,\n  }\n}\n\nexport const fetchContacts = () => {\n  return {\n    type: FETCH_CONTACTS,\n  }\n}\n\nexport const receiveContacts = payload => {\n  return {\n    type: CONTACTS_RECEIVED,\n    payload,\n  }\n}","import React, { Component } from 'react'\nimport { Spin, Icon } from 'antd';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 48 }} spin />;\nexport default class LoadingSpinner extends Component {\n  render() {\n    return (\n      <div>\n        <Spin indicator={antIcon} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport ContactsTable from '../../components/Contacts/ContactsTable';\nimport NavDrawer from '../../components/Common/Drawer';\nimport { toggleDrawer, fetchContacts } from '../../actions/contacts';\nimport LoadingSpinner from '../../components/Common/LoadingSpinner/LoadingSpinner';\n\nclass Contacts extends Component {\n\n  componentDidMount() {\n    const { fetchContacts } = this.props;\n    fetchContacts();\n  }\n\n  render() {\n    const {\n      openDrawer,\n      toggleDrawer,\n      activeContact,\n      loadingContact,\n      contacts,\n    } = this.props;\n\n    if (loadingContact) return <LoadingSpinner />\n\n    return (\n      <div>\n        <ContactsTable\n          toggleDrawer={toggleDrawer}\n          loadingContact={loadingContact}\n          contacts={contacts}\n        />\n        <NavDrawer\n          openDrawer={openDrawer}\n          toggleDrawer={toggleDrawer}\n          activeContact={activeContact}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  openDrawer: state.contacts.openDrawer,\n  activeContact: state.contacts.activeContact,\n  loadingContact: state.contacts.loading_contacts,\n  contacts: state.contacts.contacts,\n})\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    toggleDrawer,\n    fetchContacts,\n  }, dispatch );\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Contacts);\n","import Contacts from './Contacts'\n\nexport default Contacts;\n","import Navigation from './Navigation';\n\nexport default Navigation;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Menu, Icon } from 'antd';\n\n\nconst Navigation = (props) => {\n  \n  return (\n    <Menu mode=\"horizontal\">\n      <Menu.Item key=\"home\">\n        <Link className=\"icon\" to=\"/home\">\n          <Icon type=\"home\" />\n          Home\n        </Link>\n      </Menu.Item>\n      <Menu.Item key=\"contacts\">\n        <Link className=\"icon\" to=\"/contacts\">\n          <Icon type=\"contacts\" />\n          Contacts\n        </Link>\n      </Menu.Item>\n      <Menu.Item key=\"profile\">\n        <Link className=\"icon\" to=\"/profile\">\n          <Icon type=\"profile\" />\n          Profile\n        </Link>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default withRouter(Navigation);\n","import React from 'react'\nimport { Switch, Redirect } from 'react-router-dom';\nimport { ProtectedRoute, AuthRoute } from '../src/utils/RouteUtil';\nimport { Home, Login, Profile, Contacts } from './containers';\nimport Navigation from './components/Navigation';\n\nconst Routes = () => (\n  <div className=\"app\">\n    <Navigation />\n    <ProtectedRoute exact path=\"/\" component={() => (<Redirect to=\"/home\" />)} />\n    <Switch>\n      <AuthRoute exact path=\"/login\" component={Login} />\n      <ProtectedRoute exact path=\"/contacts\" component={Contacts} />\n      <ProtectedRoute exact path=\"/profile\" component={Profile} />\n      <ProtectedRoute exact path=\"/home\" component={Home} />\n    </Switch>\n  </div>\n)\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\n\nimport Routes from './routes';\nimport './App.css';\n\nconst store = configureStore()\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Routes />\n    </Router>\n  </Provider>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}